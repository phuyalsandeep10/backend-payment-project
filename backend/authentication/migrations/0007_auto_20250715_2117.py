# Generated by Django 5.2.2 on 2025-07-15 15:32

from django.db import migrations, models


def ensure_avatar_removed(apps, schema_editor):
    """
    Ensure the avatar column is removed from the database if it exists.
    This handles the case where the initial migration created the avatar field
    but it was later removed in subsequent migrations.
    """
    db_alias = schema_editor.connection.alias
    with schema_editor.connection.cursor() as cursor:
        # Check if the avatar column exists
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'authentication_user' 
            AND column_name = 'avatar'
        """)
        if cursor.fetchone():
            # Column exists, remove it
            schema_editor.execute("ALTER TABLE authentication_user DROP COLUMN avatar")


def reverse_ensure_avatar_removed(apps, schema_editor):
    """
    Reverse operation - this is a no-op since we don't want to add avatar back.
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("authentication", "0006_fix_avatar_login_count_conflict"),
    ]

    operations = [
        # Ensure the database is consistent first
        migrations.RunPython(
            ensure_avatar_removed,
            reverse_ensure_avatar_removed,
        ),
        # Remove the avatar field from the model state
        migrations.RemoveField(
            model_name='user',
            name='avatar',
        ),
    ]
