# Generated by Django 5.2.2 on 2025-08-18 07:54

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('authentication_attempt', 'Authentication Attempt'), ('authentication_success', 'Authentication Success'), ('authentication_failure', 'Authentication Failed'), ('authorization_failure', 'Authorization Failed'), ('password_change', 'Password Change'), ('password_reset', 'Password Reset'), ('account_lockout', 'Account Lockout'), ('suspicious_activity', 'Suspicious Activity'), ('file_upload', 'File Upload'), ('file_upload_blocked', 'File Upload Blocked'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('session_created', 'Session Created'), ('session_expired', 'Session Expired'), ('session_terminated', 'Session Terminated'), ('permission_escalation', 'Permission Escalation Attempt'), ('data_access', 'Sensitive Data Access'), ('configuration_change', 'Configuration Change'), ('security_scan_detected', 'Security Scan Detected'), ('brute_force_detected', 'Brute Force Attack Detected'), ('sql_injection_attempt', 'SQL Injection Attempt'), ('xss_attempt', 'XSS Attempt'), ('csrf_violation', 'CSRF Violation'), ('malware_detected', 'Malware Detected'), ('intrusion_detected', 'Intrusion Detected')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('INVESTIGATING', 'Investigating'), ('RESOLVED', 'Resolved'), ('FALSE_POSITIVE', 'False Positive')], default='NEW', max_length=20)),
                ('session_key', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('description', models.TextField()),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('risk_score', models.IntegerField(default=0)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('investigation_notes', models.TextField(blank=True)),
                ('resolution_action', models.TextField(blank=True)),
                ('investigated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investigated_security_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('SECURITY_EVENT', 'Security Event Alert'), ('THRESHOLD_BREACH', 'Threshold Breach'), ('PATTERN_DETECTION', 'Suspicious Pattern Detection'), ('COMPLIANCE_VIOLATION', 'Compliance Violation'), ('SYSTEM_ANOMALY', 'System Anomaly')], max_length=50)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved'), ('SUPPRESSED', 'Suppressed')], default='ACTIVE', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('alert_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('escalation_level', models.IntegerField(default=0)),
                ('auto_escalate', models.BooleanField(default=True)),
                ('escalation_threshold_hours', models.IntegerField(default=24)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_security_alerts', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_security_alerts', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_alerts', to=settings.AUTH_USER_MODEL)),
                ('related_events', models.ManyToManyField(blank=True, to='security.securityevent')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('SECURITY_AUDIT', 'Security Audit'), ('ACCESS_LOG', 'Access Log Report'), ('DATA_PROTECTION', 'Data Protection Compliance'), ('GDPR_COMPLIANCE', 'GDPR Compliance Report'), ('SOX_COMPLIANCE', 'SOX Compliance Report'), ('CUSTOM', 'Custom Compliance Report')], max_length=50)),
                ('status', models.CharField(choices=[('GENERATING', 'Generating'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('ARCHIVED', 'Archived')], default='GENERATING', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('report_parameters', models.JSONField(blank=True, default=dict)),
                ('report_data', models.JSONField(blank=True, default=dict)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('report_file', models.FileField(blank=True, null=True, upload_to='compliance_reports/')),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', 'created_at'], name='security_co_report__1778b0_idx'), models.Index(fields=['status', 'created_at'], name='security_co_status_cd0058_idx'), models.Index(fields=['generated_by', 'created_at'], name='security_co_generat_1d0dc0_idx'), models.Index(fields=['start_date', 'end_date'], name='security_co_start_d_a528ff_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['event_type', 'created_at'], name='security_se_event_t_18b5ea_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['user', 'created_at'], name='security_se_user_id_60815f_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['ip_address', 'created_at'], name='security_se_ip_addr_1bac92_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['severity', 'status'], name='security_se_severit_ce8926_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['risk_score'], name='security_se_risk_sc_eb5c28_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['alert_type', 'created_at'], name='security_se_alert_t_df8e26_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['severity', 'status'], name='security_se_severit_a46e61_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['status', 'created_at'], name='security_se_status_e77fa7_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['assigned_to', 'status'], name='security_se_assigne_686644_idx'),
        ),
    ]
