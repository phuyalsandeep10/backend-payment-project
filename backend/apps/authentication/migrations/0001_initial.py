# Generated by Django 5.2.2 on 2025-08-18 04:41

import apps.deals.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OTPToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=10)),
                ('token_hash', models.CharField(db_index=True, max_length=64)),
                ('purpose', models.CharField(choices=[('login', 'Login Verification'), ('password_reset', 'Password Reset'), ('email_verification', 'Email Verification'), ('admin_action', 'Admin Action Verification'), ('sensitive_operation', 'Sensitive Operation')], db_index=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts', models.IntegerField(default=3)),
                ('is_used', models.BooleanField(db_index=True, default=False)),
                ('is_locked', models.BooleanField(db_index=True, default=False)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_method', models.CharField(default='email', max_length=20)),
                ('delivery_status', models.CharField(default='pending', max_length=20)),
                ('delivery_attempts', models.IntegerField(default=0)),
                ('last_delivery_attempt', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'OTP Token',
                'verbose_name_plural': 'OTP Tokens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordExpiration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiration_notified_at', models.DateTimeField(blank=True, null=True)),
                ('warning_sent_count', models.IntegerField(default=0)),
                ('is_expired', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Password Expiration',
                'verbose_name_plural': 'Password Expirations',
            },
        ),
        migrations.CreateModel(
            name='PasswordHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_hash', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Password History',
                'verbose_name_plural': 'Password Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecureUserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, max_length=128, unique=True)),
                ('jwt_token_id', models.CharField(db_index=True, help_text='JWT token ID (jti claim)', max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField()),
                ('user_agent_hash', models.CharField(db_index=True, max_length=64)),
                ('session_fingerprint', models.CharField(db_index=True, max_length=64)),
                ('login_method', models.CharField(db_index=True, default='jwt', max_length=20)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('browser_name', models.CharField(blank=True, max_length=50, null=True)),
                ('os_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_suspicious', models.BooleanField(db_index=True, default=False)),
                ('suspicious_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('flagged_at', models.DateTimeField(blank=True, null=True)),
                ('ip_verified', models.BooleanField(default=True)),
                ('user_agent_verified', models.BooleanField(default=True)),
                ('fingerprint_verified', models.BooleanField(default=True)),
                ('login_location', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Secure User Session',
                'verbose_name_plural': 'Secure User Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('authentication_attempt', 'Authentication Attempt'), ('authentication_success', 'Authentication Success'), ('authentication_failure', 'Authentication Failure'), ('permission_denied', 'Permission Denied'), ('suspicious_activity', 'Suspicious Activity'), ('file_upload_threat', 'File Upload Threat'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('session_created', 'Session Created'), ('session_terminated', 'Session Terminated'), ('password_changed', 'Password Changed'), ('account_locked', 'Account Locked'), ('account_unlocked', 'Account Unlocked'), ('data_access', 'Data Access'), ('data_modification', 'Data Modification'), ('admin_action', 'Admin Action'), ('security_violation', 'Security Violation'), ('malware_detected', 'Malware Detected'), ('intrusion_attempt', 'Intrusion Attempt'), ('privilege_escalation', 'Privilege Escalation'), ('data_export', 'Data Export')], db_index=True, max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='medium', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('user_role', models.CharField(blank=True, max_length=50, null=True)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('user_agent_hash', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('request_path', models.CharField(blank=True, max_length=500, null=True)),
                ('request_method', models.CharField(blank=True, max_length=10, null=True)),
                ('event_description', models.TextField()),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('correlation_id', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('session_id', models.CharField(blank=True, db_index=True, max_length=128, null=True)),
                ('risk_score', models.IntegerField(db_index=True, default=0)),
                ('is_blocked', models.BooleanField(db_index=True, default=False)),
                ('is_investigated', models.BooleanField(db_index=True, default=False)),
                ('investigated_at', models.DateTimeField(blank=True, null=True)),
                ('investigation_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Security Event',
                'verbose_name_plural': 'Security Events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', validators=[apps.deals.validators.validate_file_security])),
                ('bio', models.TextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('contact_number', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.TextField(blank=True, help_text="User's address", null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('invited', 'Invited'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('must_change_password', models.BooleanField(default=False, help_text='Require user to change password at next login')),
                ('login_count', models.IntegerField(default=0)),
                ('sales_target', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('streak', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
        ),
    ]
