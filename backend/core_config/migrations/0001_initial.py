# Generated by Django 5.2.2 on 2025-08-13 19:57

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('authentication_attempt', 'Authentication Attempt'), ('authentication_success', 'Authentication Success'), ('authentication_failure', 'Authentication Failed'), ('authorization_failure', 'Authorization Failed'), ('password_change', 'Password Change'), ('password_reset', 'Password Reset'), ('account_lockout', 'Account Lockout'), ('suspicious_activity', 'Suspicious Activity'), ('file_upload', 'File Upload'), ('file_upload_blocked', 'File Upload Blocked'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('session_created', 'Session Created'), ('session_expired', 'Session Expired'), ('session_terminated', 'Session Terminated'), ('permission_escalation', 'Permission Escalation Attempt'), ('data_access', 'Sensitive Data Access'), ('configuration_change', 'Configuration Change'), ('security_scan_detected', 'Security Scan Detected'), ('brute_force_detected', 'Brute Force Attack Detected'), ('sql_injection_attempt', 'SQL Injection Attempt'), ('xss_attempt', 'XSS Attempt'), ('csrf_violation', 'CSRF Violation'), ('malware_detected', 'Malware Detected'), ('intrusion_detected', 'Intrusion Detected')], db_index=True, max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='medium', max_length=20)),
                ('session_id', models.CharField(blank=True, max_length=128, null=True)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_id', models.CharField(blank=True, max_length=128, null=True)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('source', models.CharField(default='application', max_length=100)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('risk_score', models.IntegerField(default=0)),
                ('is_blocked', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'security_events',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('brute_force', 'Brute Force Attack'), ('suspicious_login', 'Suspicious Login'), ('multiple_failures', 'Multiple Authentication Failures'), ('unusual_activity', 'Unusual Activity Pattern'), ('malware_detected', 'Malware Detected'), ('data_breach_attempt', 'Data Breach Attempt'), ('privilege_escalation', 'Privilege Escalation'), ('account_compromise', 'Account Compromise'), ('system_intrusion', 'System Intrusion')], db_index=True, max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], db_index=True, default='open', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('affected_ips', models.JSONField(blank=True, default=list)),
                ('first_seen', models.DateTimeField(db_index=True)),
                ('last_seen', models.DateTimeField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('event_count', models.IntegerField(default=1)),
                ('risk_score', models.IntegerField(default=0)),
                ('affected_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_security_alerts', to=settings.AUTH_USER_MODEL)),
                ('security_events', models.ManyToManyField(blank=True, to='core_config.securityevent')),
            ],
            options={
                'db_table': 'security_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.CharField(db_index=True, max_length=100)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('ARCHIVE', 'Archive'), ('RESTORE', 'Restore')], db_index=True, max_length=20)),
                ('table_name', models.CharField(db_index=True, max_length=100)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('changed_fields', models.JSONField(blank=True, default=list)),
                ('session_id', models.CharField(blank=True, max_length=128, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_id', models.CharField(blank=True, max_length=128, null=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('reason', models.TextField(blank=True)),
                ('is_sensitive', models.BooleanField(default=False)),
                ('retention_period', models.IntegerField(default=2555)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_trails',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='audit_trail_content_1f782d_idx'), models.Index(fields=['table_name', 'object_id'], name='audit_trail_table_n_324cb9_idx'), models.Index(fields=['user', 'timestamp'], name='audit_trail_user_id_bda44d_idx'), models.Index(fields=['action', 'timestamp'], name='audit_trail_action_15924b_idx'), models.Index(fields=['timestamp', 'table_name'], name='audit_trail_timesta_39b174_idx'), models.Index(fields=['is_sensitive', 'timestamp'], name='audit_trail_is_sens_ae5904_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('security_events', 'Security Events Report'), ('audit_trail', 'Audit Trail Report'), ('access_report', 'Access Report'), ('financial_audit', 'Financial Audit Report'), ('compliance_check', 'Compliance Check Report'), ('user_activity', 'User Activity Report'), ('data_access', 'Data Access Report')], db_index=True, max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('date_from', models.DateTimeField(db_index=True)),
                ('date_to', models.DateTimeField(db_index=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('report_data', models.JSONField(blank=True, null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('record_count', models.IntegerField(default=0)),
                ('file_size', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', 'status'], name='compliance__report__e2d545_idx'), models.Index(fields=['created_by', 'created_at'], name='compliance__created_d39563_idx'), models.Index(fields=['date_from', 'date_to'], name='compliance__date_fr_518205_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['event_type', 'timestamp'], name='security_ev_event_t_efa0a0_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['user', 'timestamp'], name='security_ev_user_id_6a5f21_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['severity', 'timestamp'], name='security_ev_severit_db68de_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['ip_address', 'timestamp'], name='security_ev_ip_addr_038026_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['timestamp', 'event_type'], name='security_ev_timesta_a07168_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['risk_score', 'timestamp'], name='security_ev_risk_sc_f0c553_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['is_blocked', 'timestamp'], name='security_ev_is_bloc_246659_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['alert_type', 'status'], name='security_al_alert_t_60f9a1_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['severity', 'status'], name='security_al_severit_1c570c_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['created_at', 'status'], name='security_al_created_7a6f5e_idx'),
        ),
        migrations.AddIndex(
            model_name='securityalert',
            index=models.Index(fields=['risk_score', 'status'], name='security_al_risk_sc_204e1a_idx'),
        ),
    ]
